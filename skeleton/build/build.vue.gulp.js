/**
* Everything script builder
* This loads all `*.vue` files thoughout the project and compiles them into `build/app.js`
*/

var _ = require('lodash');
var fs = require('fs');
var glob = require('globby');
var gulp = require('gulp');
var parcel = require('parcel-bundler');
var os = require('os');

gulp.task('build.vue', ['load:app', 'build.vue.index'], ()=> Promise.resolve()
	.then(()=> new parcel(`${app.config.paths.root}/app/app.vue`, {
		outDir: `${app.config.paths.root}/dist`,
		outFile: 'app.js',
		watch: false,
		cache: true,
		cacheDir: '.cache',
		minify: app.config.gulp.minifyJS,
		sourceMaps: false, // FIXME: needs to be `app.config.gulp.debugJS` disabled until https://github.com/parcel-bundler/parcel/issues/2408 closes
		autoInstall: false, // Disable install of missing deps
		detailedReport: true,
	}))
	.then(bundler => bundler.bundle())
);

gulp.task('build.vue.index', ['load:app'], ()=> Promise.resolve()
	.then(()=> glob([
		'**/*.vue',
		'!app/app*.vue', // Ignore all top level app files as these are managed seperately
		...app.config.paths.ignore,
	]))
	.then(files => fs.promises.writeFile(`${app.config.paths.root}/app/app.index.vue`, [
		'<script>',
		'/**',
		'* Auto-generated import list of all .vue files',
		'*',
		'* WARNING: This file is auto-generated by the `gulp build.parcel.index` process.',
		'*          Edits to this file will be clobbered.',
		'*',
		`* Last generated: ${(new Date).toISOString()}`,
		'*/',
		'',
		...files.map(file => `import '../${file}'`),
		'</script>',
	].join('\n')))
);
