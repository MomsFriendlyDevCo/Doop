<script lang="js" backend on="preEndpoints">
/**
* Backend mimic injector for sessions
* If an incomming request has the header specificed in `app.config.session.mimic.header` AND the user has the permission specifed in `app.config.mimic.permission` - replace the req.user user with the mimic requested user for any endpoint path
*/
if (!app.config.session.mimic.enabled) return; // Mimic disabled

app.use((req, res, next) => {
	if (!req.user || !req.headers[app.config.session.mimic.header]) return next(); // No user or not requesting mimic - carry on

	if (!req.user.permissions[app.config.session.mimic.permission]) {
		app.log.warn('User', req.user._id, `(${req.user.username})`, `is requesting mimic via header '${app.config.session.mimic.header}' but does not have permission '${app.config.session.mimic.permission}'`);
		return next();
	}

	db.users.findById(req.headers[app.config.session.mimic.header])
		.then(mimicUser => mimicUser || Promise.reject('404: Mimic user not found'))
		.then(mimicUser => {
			var originalUser = req.user;
			req.user = mimicUser; // Override user
			req.user.username += ` [MIMIC by ${originalUser.username}]`; // Append mimic data for logging
			req.user.permissions[app.config.session.mimic.permission] = true; // Allow mimic user to keep mimic switch permission so they can change again
		})
		.then(()=> next())
		.catch(res.sendError)
});
</script>
