<server on="init, dbInit">
var monoxide = require('monoxide');
var promisify = require('util').promisify;
exports = ()=> Promise.resolve()
	.then(()=> app.config.mongo.hooks = true) // Enabled specificaly to queue DB middleware calls
	.then(()=> app.log('Connecting to', app.log.colors.cyan(app.config.mongo.uri)))
	.then(()=> promisify(monoxide.use)(app.config.mongo.plugins)) // Setup plugins - NOTE that since we've not set up the promises plugin yet this needs to be promisified
	.then(()=> monoxide.connect(app.config.mongo.uri, app.config.mongo.options))
	.then(()=> {
		app.on('postSchemas', ()=> {
			app.log('Loaded', app.log.colors.cyan(Object.keys(monoxide.models).length), 'DB schemas:', Object.keys(monoxide.models).map(m => app.log.colors.cyan(m)).join(', '))
			Object.assign(app.db, monoxide.models);
			global.db = app.db;
		});

		app.on('exit', ()=>
			monoxide.disconnect()
				.then(()=> app.log('DB Disconnected'))
		);
	});
</server>
