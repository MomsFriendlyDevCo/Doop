<server on="middleware, dbMiddleware">
var _ = require('lodash');

/**
* Simple Database middleware to store the date that a timestramp changed in the object
* @param {string} [key='status'] The key to monitor for changes
* @param {string|function} [path] The path to save the timestamp as or a promise factory which returns the path. Called as `(doc, settings)`
* @returns {function} Database middleware
*
* @example Attach to the widgets schema to add timestamps on change
*   app.middleware.db.schema('widgets', { ... })
*     .pre('save', app.middleware.db.timestamps())
*/
app.middleware.db.timestamps = options => {
	// Settings {{{
	var settings = {
		key: 'status',
		path: doc => `timestamps.${doc[settings.key]}`, 
		...options,
	};
	// }}}

	return function(next) {
		if (!this[settings.key]) return next(); // Not changing status

		Promise.resolve(settings.path(this, settings))
			.then(path => _.set(this, path, new Date()))
			.then(()=> next())
			.catch(next)
	};
};
</server>
